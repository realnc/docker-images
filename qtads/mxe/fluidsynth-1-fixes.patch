diff -Naur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2021-07-11 18:37:54.000000000 +0300
+++ b/CMakeLists.txt	2021-09-14 18:51:23.229133762 +0300
@@ -91,6 +91,11 @@
 option ( enable-readline "compile readline lib line editing (if it is available)" on )
 option ( enable-threads "enable multi-threading support (such as parallel voice synthesis)" on )
 
+# Options for build components
+option ( build-bins "build binary programs" on )
+option ( build-docs "build docs" on )
+option ( build-tests "build tests" on )
+
 # Platform specific options
 if ( CMAKE_SYSTEM MATCHES "Linux|FreeBSD|DragonFly" )
     option ( enable-lash "compile LASH support (if it is available)" on )
@@ -303,6 +308,7 @@
 
   if ( enable-dsound AND HAVE_DSOUND_H )
     set ( WINDOWS_LIBS "${WINDOWS_LIBS};dsound;ksuser" )
+    set ( PC_LIBS "${PC_LIBS} -ldsound" )
     set ( DSOUND_SUPPORT 1 )
   endif ()
 
@@ -332,6 +338,11 @@
   if ( MINGW )
     set ( MINGW32 1 )
     add_compile_options ( -mms-bitfields )
+    # mman-win32
+    if ( HAVE_SYS_MMAN_H )
+      set ( WINDOWS_LIBS "${WINDOWS_LIBS};mman" )
+      set ( PC_LIBS "${PC_LIBS} -lmman" )
+    endif ()
   endif  ( MINGW )
 else ( WIN32 )
 # Check PThreads, but not in Windows
@@ -513,6 +524,7 @@
 
     # Mandatory libraries: glib and gthread
     pkg_check_modules ( GLIB REQUIRED glib-2.0>=2.6.5 gthread-2.0>=2.6.5 )
+    set ( PC_REQUIRES "${PC_REQUIRES} glib-2.0 gthread-2.0")
 
     if ( GLIB_glib-2.0_VERSION AND GLIB_glib-2.0_VERSION VERSION_LESS "2.26.0" )
         message ( WARNING "Your version of glib is very old. This may cause problems with fluidsynth's sample cache on Windows. Consider updating to glib 2.26 or newer!" )
@@ -535,6 +547,7 @@
              LIBSNDFILE_STATIC_LDFLAGS MATCHES "vorbis" OR
              LIBSNDFILE_STATIC_LDFLAGS_OTHER MATCHES "vorbis" )
           set ( LIBSNDFILE_HASVORBIS 1 )
+          set ( PC_REQUIRES "${PC_REQUIRES} sndfile")
         else ()
           message ( NOTICE "Seems like libsndfile was compiled without OGG/Vorbis support." )
         endif ()
@@ -564,6 +577,9 @@
     if ( enable-portaudio )
     pkg_check_modules ( PORTAUDIO portaudio-2.0>=19 )
     set ( PORTAUDIO_SUPPORT ${PORTAUDIO_FOUND} )
+    if ( PORTAUDIO_SUPPORT )
+      set ( PC_REQUIRES "${PC_REQUIRES} portaudio-2.0")
+    endif ()
     else ( enable-portaudio )
     unset_pkg_config ( PORTAUDIO )
     endif ( enable-portaudio )
@@ -572,6 +588,9 @@
     if ( enable-jack )
     pkg_check_modules ( JACK jack )
     set ( JACK_SUPPORT ${JACK_FOUND} )
+    if ( JACK_SUPPORT )
+      set ( PC_REQUIRES "${PC_REQUIRES} jack")
+    endif ()
     else ( enable-jack )
     unset_pkg_config ( JACK )
     endif ( enable-jack )
@@ -600,6 +619,9 @@
     if ( enable-dbus )
     pkg_check_modules ( DBUS dbus-1>=1.0.0 )
     set ( DBUS_SUPPORT ${DBUS_FOUND} )
+    if ( DBUS_SUPPORT )
+      set ( PC_REQUIRES "${PC_REQUIRES} dbus-1")
+    endif ()
     else ( enable-dbus )
     unset_pkg_config ( DBUS )
     endif ( enable-dbus )
@@ -650,6 +672,7 @@
     if ( READLINE_FOUND )
         set ( WITH_READLINE 1 )
         set ( READLINE_LIBS ${READLINE_LIBRARIES} )
+        set ( PC_REQUIRES "${PC_REQUIRES} readline")
     endif ( READLINE_FOUND )
     endif ( enable-readline )
 
@@ -799,8 +822,12 @@
 
 # Process subdirectories
 add_subdirectory ( src )
-add_subdirectory ( test )
-add_subdirectory ( doc )
+if ( build-tests )
+    add_subdirectory ( test )
+endif ()
+if ( build-docs )
+    add_subdirectory ( doc )
+endif ()
 
 # pkg-config support
 set ( prefix "${CMAKE_INSTALL_PREFIX}" )
diff -Naur a/fluidsynth.pc.in b/fluidsynth.pc.in
--- a/fluidsynth.pc.in	2021-07-11 18:37:54.000000000 +0300
+++ b/fluidsynth.pc.in	2021-09-14 18:50:03.559669120 +0300
@@ -6,6 +6,7 @@
 Name: FluidSynth
 Description: Software SoundFont synth
 Version: @VERSION@
-Libs: -L${libdir} -lfluidsynth
+Requires: @PC_REQUIRES@
+Libs: -L${libdir} -lfluidsynth @PC_LIBS@
 Libs.private: @LIBS_PRIVATE_JOINED@ @LIBS_PRIVATE_WITH_PATH_JOINED@
 Cflags: -I${includedir}
diff -Naur a/src/CMakeLists.txt b/src/CMakeLists.txt
--- a/src/CMakeLists.txt	2021-07-11 18:37:54.000000000 +0300
+++ b/src/CMakeLists.txt	2021-09-14 18:40:49.347513335 +0300
@@ -373,38 +373,40 @@
 
 # ************ CLI program ************
 
-set ( fluidsynth_SOURCES fluidsynth.c )
-
 if ( WASAPI_SUPPORT )
   set ( fluidsynth_SOURCES ${fluidsynth_SOURCES} fluid_wasapi_device_enumerate.c )
 endif ( WASAPI_SUPPORT )
 
-add_executable ( fluidsynth
-    ${fluidsynth_SOURCES}
-)
+if ( build-bins )
+  set ( fluidsynth_bin "fluidsynth" )
+  set ( fluidsynth_SOURCES fluidsynth.c )
+    add_executable ( fluidsynth
+      ${fluidsynth_SOURCES}
+    )
 
-set_target_properties ( fluidsynth
+  set_target_properties ( fluidsynth
     PROPERTIES IMPORT_PREFIX "" )
 
-if ( FLUID_CPPFLAGS )
-  set_target_properties ( fluidsynth
-    PROPERTIES COMPILE_FLAGS ${FLUID_CPPFLAGS} )
-endif ( FLUID_CPPFLAGS )
+  if ( FLUID_CPPFLAGS )
+    set_target_properties ( fluidsynth
+      PROPERTIES COMPILE_FLAGS ${FLUID_CPPFLAGS} )
+  endif ( FLUID_CPPFLAGS )
 
-target_link_libraries ( fluidsynth
+  target_link_libraries ( fluidsynth
     libfluidsynth
     ${SYSTEMD_LIBRARIES}
     ${FLUID_LIBS}
-)
+  )
+endif ()
 
 if ( MACOSX_FRAMEWORK )
-  install ( TARGETS fluidsynth libfluidsynth
+  install ( TARGETS ${fluidsynth_bin} libfluidsynth
     RUNTIME DESTINATION ${BIN_INSTALL_DIR}
     FRAMEWORK DESTINATION ${FRAMEWORK_INSTALL_DIR}
     ARCHIVE DESTINATION ${FRAMEWORK_INSTALL_DIR}
 )
 else ( MACOSX_FRAMEWORK )
-  install ( TARGETS fluidsynth libfluidsynth
+  install ( TARGETS ${fluidsynth_bin} libfluidsynth
     RUNTIME DESTINATION ${BIN_INSTALL_DIR}
     LIBRARY DESTINATION ${LIB_INSTALL_DIR}
     ARCHIVE DESTINATION ${LIB_INSTALL_DIR}
